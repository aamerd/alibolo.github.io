Directory Structure
/your-project-directory
    ├── index.html
    ├── albums.txt
    ├── tracks.txt

albums.txt
Album 1
Album 2
Album 3

tracks.txt
Album 1:Track 1,Track 2,Track 3
Album 2:Track 1,Track 2
Album 3:Track 1,Track 2,Track 3,Track 4

index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Album Player</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        select {
            width: 200px;
            margin: 10px;
        }
    </style>
</head>
<body>

    <h1>Music Album Player</h1>
    <audio id="audioPlayer" controls></audio>
    <br>
    <label for="albumSelect">Select Album:</label>
    <select id="albumSelect"></select>
    <br>
    <label for="trackSelect">Select Track:</label>
    <select id="trackSelect"></select>

    <script>
        const albumSelect = document.getElementById('albumSelect');
        const trackSelect = document.getElementById('trackSelect');
        const audioPlayer = document.getElementById('audioPlayer');

        // Load albums from albums.txt
        fetch('albums.txt')
            .then(response => response.text())
            .then(data => {
                const albums = data.split('\n').filter(album => album.trim() !== '');
                albums.forEach(album => {
                    const option = document.createElement('option');
                    option.value = album;
                    option.textContent = album;
                    albumSelect.appendChild(option);
                });
            });

        // Load tracks based on selected album
        albumSelect.addEventListener('change', function() {
            const selectedAlbum = this.value;
            trackSelect.innerHTML = ''; // Clear previous tracks

            fetch('tracks.txt')
                .then(response => response.text())
                .then(data => {
                    const tracksData = data.split('\n').filter(line => line.trim() !== '');
                    const tracks = tracksData.find(line => line.startsWith(selectedAlbum));
                    if (tracks) {
                        const trackTitles = tracks.split(':')[1].split(',');
                        trackTitles.forEach(track => {
                            const option = document.createElement('option');
                            option.value = track;
                            option.textContent = track;
                            trackSelect.appendChild(option);
                        });
                    }
                });
        });

        // Play selected track
        trackSelect.addEventListener('change', function() {
            const selectedTrack = this.value;
            audioPlayer.src = audio/${selectedTrack}.mp3; // Assuming audio files are in an 'audio' folder
            audioPlayer.play();
        });
    </script>

</body>
</html>